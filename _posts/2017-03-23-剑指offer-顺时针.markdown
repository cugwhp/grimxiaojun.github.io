---
layout: post
title:  "剑指offer 顺时针"

---
时间限制：1秒 空间限制：32768K 热度指数：10933

本题知识点： [数组](https://www.nowcoder.com/questionCenter?questionTypes=000100&mutiTagIds=578)

** 算法知识视频讲解

## 题目描述

输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.



题解：利用d二位数组确定是否改变方向，利用v存储走过的结点

代码如下：

```c++
class Solution {
public:
    bool Judge(int x,int y,int n,int m,vector<vector<bool> > v){
        if(x>=0&&x<n&&y>=0&&y<m&&!v[x][y]){
            return true;
        }else{
            return false;
        }
    }
    vector<int> printMatrix(vector<vector<int> > matrix) {  
        	vector<int>r;
			int n=matrix.size();
        	int m=matrix[0].size();
        	if(n<0||m<0)return r;
        	vector<vector<bool> >v(n,vector<bool>(m,false));
        	int d[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
        	int index=0;
        	int l=0;int x=0,y=0;
        	while(index!=n*m){          
                ++index;   
                r.push_back(matrix[x][y]);
                v[x][y]=true;
                if(!Judge(x+d[l][0],y+d[l][1],n,m,v)){
                    l=(++l)%4;                   
                }               
                x=x+d[l][0];y=y+d[l][1];
            }
        return r;
    }
};
```

